a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,div,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;-webkit-box-sizing:border-box;box-sizing:border-box}body{line-height:1;font-family:"UbuntuCondensed",Arial,sans-serif;color:#000;font-size:14px;font-weight:400}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:"UbuntuCondensed";font-style:normal;font-weight:200;src:url(../fonts/UbuntuCondensed-Regular.eot?) format("eot"),url(../fonts/UbuntuCondensed-Regular.woff2) format("woff2"),url(../fonts/UbuntuCondensed-Regular.woff) format("woff"),url(../fonts/UbuntuCondensed-Regular.ttf) format("truetype")}@font-face{font-family:"Ubuntu";font-style:normal;font-weight:300;src:url(../fonts/Ubuntu-Light.eot?) format("eot"),url(../fonts/Ubuntu-Light.woff2) format("woff2"),url(../fonts/Ubuntu-Light.woff) format("woff"),url(../fonts/Ubuntu-Light.ttf) format("truetype")}@font-face{font-family:"Ubuntu";font-style:normal;font-weight:400;src:url(../fonts/Ubuntu-Regular.eot?) format("eot"),url(../fonts/Ubuntu-Regular.woff2) format("woff2"),url(../fonts/Ubuntu-Regular.woff) format("woff"),url(../fonts/Ubuntu-Regular.ttf) format("truetype")}@font-face{font-family:"Ubuntu";font-style:normal;font-weight:500;src:url(../fonts/Ubuntu-Medium.eot?) format("eot"),url(../fonts/Ubuntu-Medium.woff2) format("woff2"),url(../fonts/Ubuntu-Medium.woff) format("woff"),url(../fonts/Ubuntu-Medium.ttf) format("truetype")}@font-face{font-family:"Ubuntu";font-style:normal;font-weight:700;src:url(../fonts/Ubuntu-Bold.eot?) format("eot"),url(../fonts/Ubuntu-Bold.woff2) format("woff2"),url(../fonts/Ubuntu-Bold.woff) format("woff"),url(../fonts/Ubuntu-Bold.ttf) format("truetype")}*{-webkit-box-sizing:border-box;box-sizing:border-box}a{text-decoration:none;color:inherit}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none}.container{width:1700px;margin:auto}.header{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;min-height:148px;padding:0 100px;background-color:#11517f}.header__logo{width:161px;height:87px;background:url(../img/logo.png) no-repeat}.header__search{width:690px;height:90px}.header__search .form{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:inherit}.header__search .form-control{width:calc(100% - 125px);height:100%;padding:0 30px;color:#fff;font-size:26px;font-style:italic;background-color:#09436d;border:0}.header__search .form-control.placeholder{color:#fff}.header__search .form-control:-moz-placeholder,.header__search .form-control::-moz-placeholder{color:#fff}.header__search .form-control:-ms-input-placeholder{color:#fff}.header__search .form-control::-webkit-input-placeholder{color:#fff}.header__search .btn{width:125px;background-color:#02365c;border:0}.footer{padding:100px 0 120px;color:#fff;text-align:center;background-color:#11517f}.footer__date,.footer__text{font-size:48px;line-height:76.8px}.footer__date{margin-top:80px;font-size:44px}.first-screen__main{min-height:475px;background:#5681a0;background:-webkit-linear-gradient(left,#5681a0 0%,#fbeddc 100%);background:-webkit-gradient(linear,left top,right top,from(#5681a0),to(#fbeddc));background:-o-linear-gradient(left,#5681a0 0%,#fbeddc 100%);background:linear-gradient(to right,#5681a0 0%,#fbeddc 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#5681a0', endColorstr='#fbeddc',GradientType=1 )}.first-screen__bottom{min-height:95px;background:#336990;background:-webkit-linear-gradient(left,#336990 0%,#869fad 100%);background:-webkit-gradient(linear,left top,right top,from(#336990),to(#869fad));background:-o-linear-gradient(left,#336990 0%,#869fad 100%);background:linear-gradient(to right,#336990 0%,#869fad 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#336990', endColorstr='#869fad',GradientType=1 )}.info__block{padding:70px 0 120px}.info__title{margin-bottom:80px;color:#455a64;font-size:45px;text-align:center}.info__title span{display:block;font-size:55px;line-height:76px}.info__text{color:#455a64;font-size:42px;font-weight:400}.dates{padding:60px 0;background-color:#88a8bf}.dates__title{margin-bottom:45px;color:#fff;font-size:72px;text-align:center}.dates__block{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.dates__left,.dates__right{width:50%}.dates__item{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;color:#11517f;font-size:25px}.dates__item+.dates__item{margin-top:50px}.dates__date{margin-top:40px;margin-right:90px}.dates__box{position:relative;width:100%;max-width:480px;min-height:190px;padding:40px;background-color:#fff}.dates__box::before{content:'';position:absolute;top:30px;left:-30px;width:0;height:0;border-top:30px solid transparent;border-bottom:30px solid transparent;border-right:30px solid #fff}.organized{min-height:595px;padding:90px 0;background-color:#11517f}.organized__title{color:#fff;font-size:72px;text-align:center}.address,.address__img{position:relative;-webkit-background-size:cover;background-size:cover}.address{padding:100px 0 650px;background:url(../img/organizing-background.jpg) no-repeat}.address::after,.conference-fee::after{content:'';position:absolute;top:0;right:0;bottom:0;left:0;background-color:rgba(64,156,255,.75)}.address__img{z-index:1;max-width:1100px;min-height:650px;margin:auto;background:url(../img/orginizing-img.jpg) no-repeat}.address__title{position:relative;z-index:1;margin-bottom:45px;color:#fff;font-size:72px;text-align:center}.map .section_title{margin-bottom:20px}.map_blk{min-height:500px}.conference-fee{position:relative;padding:100px 0 170px}.conference-fee::after{content:"";z-index:0;background-color:rgba(255,255,255,.5)}.conference-fee__block{position:relative;z-index:1}.conference-fee__title{margin-bottom:35px;color:#11517f;font-size:72px;text-align:center}.conference-fee__table{max-width:1280px;margin:auto}.conference-fee__table-head{padding:0 30px;color:#fff;font-size:45px;background-color:#88a8bf;border-width:6px 6px 3px;border-style:solid;border-color:#fff}.conference-fee__table-head .conference-fee__table-tr{height:90px}.conference-fee__table-body{padding:40px 30px 45px;background-color:rgba(255,255,255,.75);border:6px solid #e1e9ef}.conference-fee__table-body .conference-fee__table-tr+.conference-fee__table-tr{margin-top:40px}.conference-fee__table-tr{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.conference-fee__table-td:first-child,.conference-fee__table-th:first-child{width:45%}.conference-fee__table-td:nth-child(2),.conference-fee__table-th:nth-child(2){width:30%}.conference-fee__table-td:last-child,.conference-fee__table-th:last-child{width:25%}.conference-fee__table-td{color:#11517f;font-size:44px}.submission{padding:100px 0 65px}.submission__title{margin-bottom:40px;color:#11517f;font-size:72px;text-align:center}.submission__block{max-width:1280px;margin:auto;color:#11517f;font-size:40px}.submission__block p{line-height:1.15}.submission__block span{color:#626363}.submission__read-more{margin-top:40px;color:#11517f;font-size:60px;text-align:center}.submission__read-more a{display:inline-block}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
